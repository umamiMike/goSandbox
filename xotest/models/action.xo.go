// Package models contains the types for schema 'AllergyNew'.
package models

// Code generated by xo. DO NOT EDIT.

import (
	"database/sql/driver"
	"errors"
)

// Action is the 'action' enum type from schema 'AllergyNew'.
type Action uint16

const (
	// ActionArchived is the 'archived' Action.
	ActionArchived = Action(1)

	// ActionRestored is the 'restored' Action.
	ActionRestored = Action(2)
)

// String returns the string value of the Action.
func (a Action) String() string {
	var enumVal string

	switch a {
	case ActionArchived:
		enumVal = "archived"

	case ActionRestored:
		enumVal = "restored"
	}

	return enumVal
}

// MarshalText marshals Action into text.
func (a Action) MarshalText() ([]byte, error) {
	return []byte(a.String()), nil
}

// UnmarshalText unmarshals Action from text.
func (a *Action) UnmarshalText(text []byte) error {
	switch string(text) {
	case "archived":
		*a = ActionArchived

	case "restored":
		*a = ActionRestored

	default:
		return errors.New("invalid Action")
	}

	return nil
}

// Value satisfies the sql/driver.Valuer interface for Action.
func (a Action) Value() (driver.Value, error) {
	return a.String(), nil
}

// Scan satisfies the database/sql.Scanner interface for Action.
func (a *Action) Scan(src interface{}) error {
	buf, ok := src.([]byte)
	if !ok {
		return errors.New("invalid Action")
	}

	return a.UnmarshalText(buf)
}
