// Package models contains the types for schema 'AllergyNew'.
package models

// Code generated by xo. DO NOT EDIT.

import (
	"database/sql/driver"
	"errors"
)

// Severity is the 'severity' enum type from schema 'AllergyNew'.
type Severity uint16

const (
	// SeveritySevere is the 'severe' Severity.
	SeveritySevere = Severity(1)

	// SeverityMild is the 'mild' Severity.
	SeverityMild = Severity(2)

	// SeverityOther is the 'other' Severity.
	SeverityOther = Severity(3)
)

// String returns the string value of the Severity.
func (s Severity) String() string {
	var enumVal string

	switch s {
	case SeveritySevere:
		enumVal = "severe"

	case SeverityMild:
		enumVal = "mild"

	case SeverityOther:
		enumVal = "other"
	}

	return enumVal
}

// MarshalText marshals Severity into text.
func (s Severity) MarshalText() ([]byte, error) {
	return []byte(s.String()), nil
}

// UnmarshalText unmarshals Severity from text.
func (s *Severity) UnmarshalText(text []byte) error {
	switch string(text) {
	case "severe":
		*s = SeveritySevere

	case "mild":
		*s = SeverityMild

	case "other":
		*s = SeverityOther

	default:
		return errors.New("invalid Severity")
	}

	return nil
}

// Value satisfies the sql/driver.Valuer interface for Severity.
func (s Severity) Value() (driver.Value, error) {
	return s.String(), nil
}

// Scan satisfies the database/sql.Scanner interface for Severity.
func (s *Severity) Scan(src interface{}) error {
	buf, ok := src.([]byte)
	if !ok {
		return errors.New("invalid Severity")
	}

	return s.UnmarshalText(buf)
}
