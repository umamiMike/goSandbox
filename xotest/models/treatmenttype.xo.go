// Package models contains the types for schema 'AllergyNew'.
package models

// Code generated by xo. DO NOT EDIT.

import (
	"database/sql/driver"
	"errors"
)

// TreatmentType is the 'treatment_type' enum type from schema 'AllergyNew'.
type TreatmentType uint16

const (
	// TreatmentTypeInj is the 'inj' TreatmentType.
	TreatmentTypeInj = TreatmentType(1)

	// TreatmentTypeSub is the 'sub' TreatmentType.
	TreatmentTypeSub = TreatmentType(2)

	// TreatmentTypeUnk is the 'unk' TreatmentType.
	TreatmentTypeUnk = TreatmentType(3)
)

// String returns the string value of the TreatmentType.
func (tt TreatmentType) String() string {
	var enumVal string

	switch tt {
	case TreatmentTypeInj:
		enumVal = "inj"

	case TreatmentTypeSub:
		enumVal = "sub"

	case TreatmentTypeUnk:
		enumVal = "unk"
	}

	return enumVal
}

// MarshalText marshals TreatmentType into text.
func (tt TreatmentType) MarshalText() ([]byte, error) {
	return []byte(tt.String()), nil
}

// UnmarshalText unmarshals TreatmentType from text.
func (tt *TreatmentType) UnmarshalText(text []byte) error {
	switch string(text) {
	case "inj":
		*tt = TreatmentTypeInj

	case "sub":
		*tt = TreatmentTypeSub

	case "unk":
		*tt = TreatmentTypeUnk

	default:
		return errors.New("invalid TreatmentType")
	}

	return nil
}

// Value satisfies the sql/driver.Valuer interface for TreatmentType.
func (tt TreatmentType) Value() (driver.Value, error) {
	return tt.String(), nil
}

// Scan satisfies the database/sql.Scanner interface for TreatmentType.
func (tt *TreatmentType) Scan(src interface{}) error {
	buf, ok := src.([]byte)
	if !ok {
		return errors.New("invalid TreatmentType")
	}

	return tt.UnmarshalText(buf)
}
