// Package models contains the types for schema 'AllergyNew'.
package models

// Code generated by xo. DO NOT EDIT.

import (
	"database/sql/driver"
	"errors"
)

// Spare1Align is the 'spare1_align' enum type from schema 'AllergyNew'.
type Spare1Align uint16

const (
	// Spare1AlignNone is the 'none' Spare1Align.
	Spare1AlignNone = Spare1Align(1)

	// Spare1AlignLeft is the 'left' Spare1Align.
	Spare1AlignLeft = Spare1Align(2)

	// Spare1AlignRight is the 'right' Spare1Align.
	Spare1AlignRight = Spare1Align(3)

	// Spare1AlignCenter is the 'center' Spare1Align.
	Spare1AlignCenter = Spare1Align(4)
)

// String returns the string value of the Spare1Align.
func (s Spare1Align) String() string {
	var enumVal string

	switch s {
	case Spare1AlignNone:
		enumVal = "none"

	case Spare1AlignLeft:
		enumVal = "left"

	case Spare1AlignRight:
		enumVal = "right"

	case Spare1AlignCenter:
		enumVal = "center"
	}

	return enumVal
}

// MarshalText marshals Spare1Align into text.
func (s Spare1Align) MarshalText() ([]byte, error) {
	return []byte(s.String()), nil
}

// UnmarshalText unmarshals Spare1Align from text.
func (s *Spare1Align) UnmarshalText(text []byte) error {
	switch string(text) {
	case "none":
		*s = Spare1AlignNone

	case "left":
		*s = Spare1AlignLeft

	case "right":
		*s = Spare1AlignRight

	case "center":
		*s = Spare1AlignCenter

	default:
		return errors.New("invalid Spare1Align")
	}

	return nil
}

// Value satisfies the sql/driver.Valuer interface for Spare1Align.
func (s Spare1Align) Value() (driver.Value, error) {
	return s.String(), nil
}

// Scan satisfies the database/sql.Scanner interface for Spare1Align.
func (s *Spare1Align) Scan(src interface{}) error {
	buf, ok := src.([]byte)
	if !ok {
		return errors.New("invalid Spare1Align")
	}

	return s.UnmarshalText(buf)
}
