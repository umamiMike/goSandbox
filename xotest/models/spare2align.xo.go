// Package models contains the types for schema 'AllergyNew'.
package models

// Code generated by xo. DO NOT EDIT.

import (
	"database/sql/driver"
	"errors"
)

// Spare2Align is the 'spare2_align' enum type from schema 'AllergyNew'.
type Spare2Align uint16

const (
	// Spare2AlignNone is the 'none' Spare2Align.
	Spare2AlignNone = Spare2Align(1)

	// Spare2AlignLeft is the 'left' Spare2Align.
	Spare2AlignLeft = Spare2Align(2)

	// Spare2AlignRight is the 'right' Spare2Align.
	Spare2AlignRight = Spare2Align(3)

	// Spare2AlignCenter is the 'center' Spare2Align.
	Spare2AlignCenter = Spare2Align(4)
)

// String returns the string value of the Spare2Align.
func (s Spare2Align) String() string {
	var enumVal string

	switch s {
	case Spare2AlignNone:
		enumVal = "none"

	case Spare2AlignLeft:
		enumVal = "left"

	case Spare2AlignRight:
		enumVal = "right"

	case Spare2AlignCenter:
		enumVal = "center"
	}

	return enumVal
}

// MarshalText marshals Spare2Align into text.
func (s Spare2Align) MarshalText() ([]byte, error) {
	return []byte(s.String()), nil
}

// UnmarshalText unmarshals Spare2Align from text.
func (s *Spare2Align) UnmarshalText(text []byte) error {
	switch string(text) {
	case "none":
		*s = Spare2AlignNone

	case "left":
		*s = Spare2AlignLeft

	case "right":
		*s = Spare2AlignRight

	case "center":
		*s = Spare2AlignCenter

	default:
		return errors.New("invalid Spare2Align")
	}

	return nil
}

// Value satisfies the sql/driver.Valuer interface for Spare2Align.
func (s Spare2Align) Value() (driver.Value, error) {
	return s.String(), nil
}

// Scan satisfies the database/sql.Scanner interface for Spare2Align.
func (s *Spare2Align) Scan(src interface{}) error {
	buf, ok := src.([]byte)
	if !ok {
		return errors.New("invalid Spare2Align")
	}

	return s.UnmarshalText(buf)
}
