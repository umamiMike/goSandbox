// Package models contains the types for schema 'AllergyNew'.
package models

// Code generated by xo. DO NOT EDIT.

import (
	"database/sql/driver"
	"errors"
)

// TestType is the 'test_type' enum type from schema 'AllergyNew'.
type TestType uint16

const (
	// TestTypeUnknown is the 'unknown' TestType.
	TestTypeUnknown = TestType(1)

	// TestTypeMq is the 'mq' TestType.
	TestTypeMq = TestType(2)

	// TestTypeIntra is the 'intra' TestType.
	TestTypeIntra = TestType(3)
)

// String returns the string value of the TestType.
func (tt TestType) String() string {
	var enumVal string

	switch tt {
	case TestTypeUnknown:
		enumVal = "unknown"

	case TestTypeMq:
		enumVal = "mq"

	case TestTypeIntra:
		enumVal = "intra"
	}

	return enumVal
}

// MarshalText marshals TestType into text.
func (tt TestType) MarshalText() ([]byte, error) {
	return []byte(tt.String()), nil
}

// UnmarshalText unmarshals TestType from text.
func (tt *TestType) UnmarshalText(text []byte) error {
	switch string(text) {
	case "unknown":
		*tt = TestTypeUnknown

	case "mq":
		*tt = TestTypeMq

	case "intra":
		*tt = TestTypeIntra

	default:
		return errors.New("invalid TestType")
	}

	return nil
}

// Value satisfies the sql/driver.Valuer interface for TestType.
func (tt TestType) Value() (driver.Value, error) {
	return tt.String(), nil
}

// Scan satisfies the database/sql.Scanner interface for TestType.
func (tt *TestType) Scan(src interface{}) error {
	buf, ok := src.([]byte)
	if !ok {
		return errors.New("invalid TestType")
	}

	return tt.UnmarshalText(buf)
}
